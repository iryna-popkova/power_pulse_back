{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Power Pulse API",
    "description": "Documentation for Power Pulse API",
    "license": {
      "name": "Power Pulse API by blended-6 team ",
      "url": "https://github.com/iryna-popkova/power_pulse_back"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://power-pulse-back.onrender.com" },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    }
  ],

  "paths": {
    "users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "LoginResponse": {
          "201": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/users/params": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updated user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Upload user avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful user's logout"
                    }
                  }
                },
                "example": {
                  "message": "You have logout successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get list of all categories of products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/products/filter": {
      "get": {
        "tags": ["Products"],
        "summary": "Get recomended and not recomended products by blood type",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Title of products in data user"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": [
                "alcoholic drinks",
                "berries",
                "cereals",
                "dairy",
                "dried fruits",
                "eggs",
                "fish",
                "flour",
                "fruits",
                "meat",
                "mushrooms",
                "nuts",
                "oils and fats",
                "poppy",
                "sausage",
                "seeds",
                "sesame",
                "soft drinks",
                "vegetables and herbs"
              ]
            },
            "description": "Category of products"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": ["all", "recommended", "not-recommended"],
              "default": "all"
            },
            "description": "Filter of products"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsFilterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "exercises/filter": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get required exercises",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": ["Body parts", "Equipment", "Muscles"],
              "default": ""
            },
            "description": "Filter for exercises"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/exercises": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get categories of exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesBodyPartResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "diary/products": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "diary/products/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary products",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary product ID",
            "example": "5d51694902b2373622ff5773"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Product deleted from diary successfully",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Product not found in diary",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "diary/exercises": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryExercisesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "diary/exercises/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary exercises",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary exercise ID",
            "example": "64f2458d6f67bc34bae4f813"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Exercise deleted from diary",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Exercise not found in diary",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get diary by date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  }
}
