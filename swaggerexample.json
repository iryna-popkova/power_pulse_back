{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.7",
    "title": "PowerPulse API",
    "description": "API documentation for PowerPulse server",
    "license": {
      "name": "PowerPulse by Project_Group-09",
      "url": "https://github.com/NikNas1405/PowerPulse"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://powerpulserver.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (provided email already exists)",
            "content": {}
          }
        }
      }
    },
    "/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verify email with token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Email verification successful"
          },
          "400": {
            "description": "Bad request (invalid token)"
          },
          "401": {
            "description": "Unauthorized (invalid token)"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],
        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful signin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid credentials)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/params": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Updated user information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParamsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or ID)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Upload user avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or ID)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful user's logout"
                    }
                  }
                },
                "example": {
                  "message": "You have logout successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/products/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all categories products",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "description": "Title of products in data user"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": [
                "alcoholic drinks",
                "berries",
                "cereals",
                "dairy",
                "dried fruits",
                "eggs",
                "fish",
                "flour",
                "fruits",
                "meat",
                "mushrooms",
                "nuts",
                "oils and fats",
                "poppy",
                "sausage",
                "seeds",
                "sesame",
                "soft drinks",
                "vegetables and herbs"
              ]
            },
            "description": "Category of products"
          },
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": ["all", "recommended", "not-recommended"],
              "default": "all"
            },
            "description": "Filter of products"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsFilterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/exercises/filter": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get exercises",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string",
              "enum": ["Body parts", "Equipment", "Muscles"],
              "default": ""
            },
            "description": "Filter of exercises"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/exercises/filter/{category}": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get categories exercises",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string",
              "enum": [
                "chest",
                "upper legs",
                "upper arms",
                "lower arms",
                "lower legs",
                "shoulders",
                "waist",
                "cardio",
                "back",
                "neck"
              ],
              "default": ""
            },
            "description": "Body part exercises"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExercisesBodyPartResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/diary/{date}": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get diary by date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/diary/products": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary product",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/diary/products/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary product",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary product ID",
            "example": "5d51694902b2373622ff5773"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Product deleted from diary successfully",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Product not found in diary",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/diary/exercises": {
      "post": {
        "tags": ["Diary"],
        "summary": "User diary exercises",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Diary object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaryExercisesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaryExercisesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/diary/exercises/{id}": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete user diary exercises",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Diary exercise ID",
            "example": "64f2458d6f67bc34bae4f813"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Exercise deleted from diary successfully",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Exercise not found in diary",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Power Pulse"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwe123456"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"],
                "example": 1
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"],
                "example": "male"
              },
              "height": {
                "type": "number",
                "description": "User's height",
                "example": 0
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight",
                "example": 0
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight",
                "example": 0
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"],
                "example": 1
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday (mm/dd/yyyy)",
                "example": "01/20/2001"
              },
              "createdAt": {
                "type": "string",
                "description": "User's create date",
                "example": "2024-01-22T18:43:55.351Z"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWFmYWRhMmU1MjJiMzhhNWYwNTAyNyIsImlhdCI6MTcwNTcxNDE5NCwiZXhwIjoxNzA4MzA2MTk0fQ.8zpaoGrvQtustURtEStObpcAzaW_T9EH0HfEVpc_ql8"
          }
        }
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwe123456"
          }
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"],
                "example": 1
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"],
                "example": "male"
              },
              "height": {
                "type": "number",
                "description": "User's height",
                "example": 0
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight",
                "example": 0
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight",
                "example": 0
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"],
                "example": 1
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday (mm/dd/yyyy)",
                "example": "01/20/2001"
              },
              "createdAt": {
                "type": "string",
                "description": "User's create date",
                "example": "2024-01-22T18:43:55.351Z"
              }
            }
          },
          "bmr": {
            "type": "number",
            "description": "User's bmr",
            "example": 2141
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWFmYWRhMmU1MjJiMzhhNWYwNTAyNyIsImlhdCI6MTcwNTcxNDE5NCwiZXhwIjoxNzA4MzA2MTk0fQ.8zpaoGrvQtustURtEStObpcAzaW_T9EH0HfEVpc_ql8"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"],
                "example": 1
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"],
                "example": "male"
              },
              "height": {
                "type": "number",
                "description": "User's height",
                "example": 0
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight",
                "example": 0
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight",
                "example": 0
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"],
                "example": 1
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday (mm/dd/yyyy)",
                "example": "01/20/2001"
              },
              "createdAt": {
                "type": "string",
                "description": "User's create date",
                "example": "2024-01-22T18:43:55.351Z"
              }
            }
          },
          "bmr": {
            "type": "number",
            "description": "User's bmr",
            "example": 2141
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YWFmYWRhMmU1MjJiMzhhNWYwNTAyNyIsImlhdCI6MTcwNTcxNDE5NCwiZXhwIjoxNzA4MzA2MTk0fQ.8zpaoGrvQtustURtEStObpcAzaW_T9EH0HfEVpc_ql8"
          }
        }
      },
      "ParamsRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "blood",
          "sex",
          "height",
          "currentWeight",
          "desiredWeight",
          "levelActivity",
          "birthday"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Power Pulse"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "powerpulse@goit.com"
          },
          "blood": {
            "type": "number",
            "description": "User's blood type",
            "enum": ["1", "2", "3", "4"],
            "example": 1
          },
          "sex": {
            "type": "string",
            "description": "User's gender",
            "enum": ["male", "female"],
            "example": "male"
          },
          "height": {
            "type": "number",
            "description": "User's height minimum 150(cm)",
            "example": 150
          },
          "currentWeight": {
            "type": "number",
            "description": "User's current weight minimum 35(kg)",
            "example": 35
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight minimum 35(kg)",
            "example": 35
          },
          "levelActivity": {
            "type": "number",
            "description": "User's level activity",
            "enum": ["1", "2", "3", "4", "5"],
            "example": 1
          },
          "birthday": {
            "type": "string",
            "description": "Must be older than 18 years",
            "example": "01/20/2001 (mm/dd/yyyy)"
          }
        }
      },
      "ParamsResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Power Pulse"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "powerpulse@goit.com"
              },
              "blood": {
                "type": "number",
                "description": "User's blood type",
                "enum": ["1", "2", "3", "4"],
                "example": 1
              },
              "sex": {
                "type": "string",
                "description": "User's gender",
                "enum": ["male", "female"],
                "example": "male"
              },
              "height": {
                "type": "number",
                "description": "User's height minimum 150(cm)",
                "example": 175
              },
              "currentWeight": {
                "type": "number",
                "description": "User's current weight minimum 35(kg)",
                "example": 85
              },
              "desiredWeight": {
                "type": "number",
                "description": "User's desired weight minimum 35(kg)",
                "example": 80
              },
              "levelActivity": {
                "type": "number",
                "description": "User's level activity",
                "enum": ["1", "2", "3", "4", "5"],
                "example": 1
              },
              "birthday": {
                "type": "string",
                "description": "Must be older than 18 years (mm/dd/yyyy)",
                "example": "01/20/2001"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "//www.gravatar.com/avatar/2539b2169b228256128de51b7960d32c"
              }
            }
          },
          "bmr": {
            "type": "number",
            "description": "User's BMR",
            "example": "2141"
          }
        }
      },
      "AvatarRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "User avatar"
          }
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "http://res.cloudinary.com/dt2gqhsoc/image/upload/v1705244983/65a2af4959e67bb6e4a0fc83.jpg"
              }
            }
          }
        }
      },
      "CategoriesResponse": {
        "type": "object",
        "properties": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The names of product categories"
          }
        },
        "example": [
          "alcoholic drinks",
          "berries",
          "cereals",
          "dairy",
          "dried fruits",
          "eggs",
          "fish",
          "flour",
          "fruits",
          "meat",
          "mushrooms",
          "nuts",
          "oils and fats",
          "poppy",
          "sausage",
          "seeds",
          "sesame",
          "soft drinks",
          "vegetables and herbs"
        ]
      },
      "ProductsFilterResponse": {
        "type": "object",
        "properties": {
          "numberProductsRecommended": {
            "type": "integer",
            "description": "Total number of items",
            "example": 1
          },
          "dataUser": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "product id",
                  "example": "5d51694902b2373622ff5c95"
                },
                "weight": {
                  "type": "number",
                  "description": "product weight",
                  "example": 100
                },
                "calories": {
                  "type": "number",
                  "description": "product calories",
                  "example": 213
                },
                "category": {
                  "type": "string",
                  "description": "product category",
                  "example": "nuts"
                },
                "title": {
                  "type": "string",
                  "description": "product title",
                  "example": "Canned chestnut"
                },
                "groupBloodNotAllowed": {
                  "type": "object",
                  "description": "Blood group",
                  "example": {
                    "1": false,
                    "2": false,
                    "3": false,
                    "4": true
                  }
                }
              }
            }
          }
        }
      },
      "ExercisesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "product id",
              "example": "650f35ece3f5522fc6396289"
            },
            "filter": {
              "type": "string",
              "description": "Exercises type",
              "example": "Body parts"
            },
            "name": {
              "type": "string",
              "description": "Exercises name",
              "example": "back"
            },
            "imgURL": {
              "type": "string",
              "description": "Exercises image",
              "example": "https://ftp.goit.study/img/power-pulse/filters/back_wzzphw.jpg"
            }
          }
        }
      },
      "ExercisesBodyPartResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "product id",
              "example": "64f2458d6f67bc34bae4fa5b"
            },
            "bodyPart": {
              "type": "string",
              "description": "Body part type",
              "example": "waist"
            },
            "equipment": {
              "type": "string",
              "description": "Equipment name",
              "example": "dumbbell"
            },
            "gifUrl": {
              "type": "string",
              "description": "Exercises gif",
              "example": "https://ftp.goit.study/img/power-pulse/gifs/0777.gif"
            },
            "name": {
              "type": "string",
              "description": "Name",
              "example": "spell caster"
            },
            "target": {
              "type": "string",
              "description": "Target name",
              "example": "abs"
            },
            "burnedCalories": {
              "type": "number",
              "description": "Burned calories",
              "example": 192
            },
            "time": {
              "type": "number",
              "description": "Exercise time",
              "example": 3
            }
          }
        }
      },
      "DiaryResponse": {
        "type": "object",
        "properties": {
          "caloriesIntake": {
            "type": "number",
            "description": "dairy calories intake",
            "example": 2786
          },
          "consumedCalories": {
            "type": "number",
            "description": "dairy calories consumed",
            "example": 48
          },
          "burnedCalories": {
            "type": "number",
            "description": "dairy calories burned",
            "example": 264
          },
          "remainingCalories": {
            "type": "number",
            "description": "dairy calories remaining",
            "example": 2738
          },
          "remainingSports": {
            "type": "number",
            "description": "dairy sports remaining",
            "example": 107
          },
          "addProducts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "object",
                  "description": "product id",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "product id",
                      "example": "5d51694902b2373622ff5773"
                    },
                    "weight": {
                      "type": "number",
                      "description": "weight",
                      "example": 100
                    },
                    "calories": {
                      "type": "number",
                      "description": "calories",
                      "example": 340
                    },
                    "category": {
                      "type": "string",
                      "description": "category",
                      "example": "dairy"
                    },
                    "title": {
                      "type": "string",
                      "description": "title",
                      "example": "Danbo cheese"
                    },
                    "groupBloodNotAllowed": {
                      "type": "object",
                      "description": "group of blood",
                      "properties": {
                        "1": {
                          "type": "boolean",
                          "example": true
                        },
                        "2": {
                          "type": "boolean",
                          "example": true
                        },
                        "3": {
                          "type": "boolean",
                          "example": false
                        },
                        "4": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "description": "dairy product date",
                  "example": "13-01-2024"
                },
                "amount": {
                  "type": "number",
                  "description": "amount of product",
                  "example": 100
                },
                "calories": {
                  "type": "number",
                  "description": "calories amount",
                  "example": 150
                },
                "_id": {
                  "type": "string",
                  "description": "diary product id",
                  "example": "65ae8a6ff2903af360c6dff5"
                }
              }
            }
          },
          "addExercises": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "exerciseId": {
                  "type": "object",
                  "description": "exercise id",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "exercise id",
                      "example": "64f2458d6f67bc34bae4f7f7"
                    },
                    "bodyPart": {
                      "type": "string",
                      "description": "body part",
                      "example": "chest"
                    },
                    "equipment": {
                      "type": "string",
                      "description": "equipment",
                      "example": "leverage machine"
                    },
                    "gifUrl": {
                      "type": "string",
                      "description": "gif url",
                      "example": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif"
                    },
                    "name": {
                      "type": "string",
                      "description": "exercise name",
                      "example": "assisted chest dip (kneeling)"
                    },
                    "target": {
                      "type": "string",
                      "description": "target",
                      "example": "pectorals"
                    },
                    "burnedCalories": {
                      "type": "number",
                      "description": "burned calories",
                      "example": 329
                    },
                    "time": {
                      "type": "number",
                      "description": "time for exercise",
                      "example": 3
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "description": "dairy exercise date",
                  "example": "13-01-2024"
                },
                "time": {
                  "type": "number",
                  "description": "time for exercise",
                  "example": 3
                },
                "calories": {
                  "type": "number",
                  "description": "calories amount",
                  "example": 329
                },
                "_id": {
                  "type": "string",
                  "description": "diary exercise id",
                  "example": "65ae8a6ff2903af360c6dff5"
                }
              }
            }
          }
        }
      },
      "DiaryProductRequest": {
        "type": "object",
        "required": ["productId", "date", "amount", "calories"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product Id",
            "example": "64f2458d6f67bc34bae4f7f7"
          },
          "date": {
            "type": "string",
            "validate": ["The format of date: dd-MM-yyyy"],
            "description": "Date the product was eaten",
            "example": "22-01-2024"
          },
          "amount": {
            "type": "number",
            "description": "Amount of products",
            "example": 150
          },
          "calories": {
            "type": "number",
            "min": [1, "The calories cannot be less than 1 minute"],
            "description": "Burned calories",
            "example": 150
          }
        }
      },
      "DiaryProductResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Product added to diary successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "diary id",
                "example": "65ae8a6f5d81f9d9e95ec829"
              },
              "date": {
                "type": "string",
                "description": "dairy date",
                "example": "13-01-2024"
              },
              "owner": {
                "type": "string",
                "description": "owner user's id",
                "example": "65aafada2e522b38a5f05027"
              },
              "addProducts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "object",
                      "description": "product id",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "product id",
                          "example": "5d51694902b2373622ff5773"
                        },
                        "weight": {
                          "type": "number",
                          "description": "weight",
                          "example": 100
                        },
                        "calories": {
                          "type": "number",
                          "description": "calories",
                          "example": 340
                        },
                        "category": {
                          "type": "string",
                          "description": "category",
                          "example": "dairy"
                        },
                        "title": {
                          "type": "string",
                          "description": "title",
                          "example": "Danbo cheese"
                        },
                        "groupBloodNotAllowed": {
                          "type": "object",
                          "description": "group of blood",
                          "properties": {
                            "1": {
                              "type": "boolean",
                              "example": true
                            },
                            "2": {
                              "type": "boolean",
                              "example": true
                            },
                            "3": {
                              "type": "boolean",
                              "example": false
                            },
                            "4": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        }
                      }
                    },
                    "date": {
                      "type": "string",
                      "description": "dairy product date",
                      "example": "13-01-2024"
                    },
                    "amount": {
                      "type": "number",
                      "description": "amount of product",
                      "example": 100
                    },
                    "calories": {
                      "type": "number",
                      "description": "calories amount",
                      "example": 150
                    },
                    "_id": {
                      "type": "string",
                      "description": "diary product id",
                      "example": "65ae8a6ff2903af360c6dff5"
                    }
                  }
                }
              },
              "addExercises": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "DiaryExercisesRequest": {
        "type": "object",
        "required": ["exerciseId", "date", "time", "calories"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "Exercise Id",
            "example": "64f2458d6f67bc34bae4f7f4"
          },
          "date": {
            "type": "string",
            "validate": ["The format of date: dd-MM-yyyy"],
            "description": "Date of performing the exercise",
            "example": "13-01-2024"
          },
          "time": {
            "type": "number",
            "min": [1, "The time cannot be less than 1 minute"],
            "description": "Time for exercise",
            "example": 13
          },
          "calories": {
            "type": "number",
            "min": [1, "The calories cannot be less than 1 minute"],
            "description": "Burned calories",
            "example": 123
          }
        }
      },
      "DiaryExercisesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Exercise added to diary successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "diary id",
                "example": "65ae8a6f5d81f9d9e95ec829"
              },
              "date": {
                "type": "string",
                "description": "dairy  date",
                "example": "13-01-2024"
              },
              "owner": {
                "type": "string",
                "description": "owner user's id",
                "example": "65aafada2e522b38a5f05027"
              },
              "addExercises": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "exerciseId": {
                      "type": "object",
                      "description": "exercise id",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "exercise id",
                          "example": "64f2458d6f67bc34bae4f7f7"
                        },
                        "bodyPart": {
                          "type": "string",
                          "description": "body part",
                          "example": "chest"
                        },
                        "equipment": {
                          "type": "string",
                          "description": "equipment",
                          "example": "leverage machine"
                        },
                        "gifUrl": {
                          "type": "string",
                          "description": "gif url",
                          "example": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif"
                        },
                        "name": {
                          "type": "string",
                          "description": "exercise name",
                          "example": "assisted chest dip (kneeling)"
                        },
                        "target": {
                          "type": "string",
                          "description": "target",
                          "example": "pectorals"
                        },
                        "burnedCalories": {
                          "type": "number",
                          "description": "burned calories",
                          "example": 329
                        },
                        "time": {
                          "type": "number",
                          "description": "time for exercise",
                          "example": 3
                        }
                      }
                    },
                    "date": {
                      "type": "string",
                      "description": "dairy exercise date",
                      "example": "13-01-2024"
                    },
                    "time": {
                      "type": "number",
                      "description": "time for exercise",
                      "example": 3
                    },
                    "calories": {
                      "type": "number",
                      "description": "calories amount",
                      "example": 329
                    },
                    "_id": {
                      "type": "string",
                      "description": "diary exercise id",
                      "example": "65ae8a6ff2903af360c6dff5"
                    }
                  }
                }
              },
              "addProducts": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "numberRegistered": {
            "type": "number",
            "description": "The total number of users registered in the application",
            "example": 84
          },
          "numberExercises": {
            "type": "number",
            "description": "The total number of video tutorials in the application",
            "example": 1324
          },
          "allTotalAmount": {
            "type": "number",
            "description": "The total amount eaten",
            "example": 22523
          },
          "allTotalCalories": {
            "type": "number",
            "description": "The total calories received",
            "example": 49214
          },
          "allTotalTimeExercises": {
            "type": "number",
            "description": "The total number of hours spent by registered users in the application for training",
            "example": 1902
          },
          "allTotalCaloriesExercises": {
            "type": "number",
            "description": "The total calories burned by all registered users in the application",
            "example": 9350
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
